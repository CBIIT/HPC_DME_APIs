#!/usr/bin/env bash
# functions
# @author: George Zaki 
# 
# Copyright Leidos Biomedical Research, Inc
# 
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/HPC/LICENSE.txt for details.
#
# Common functions used by the permission unit tests

#Submit a request to change permission
#Input: permission-file
#Input: response-header-file
#Input: response-message-file
function update_permission {

    if [ -z "$1" ]
    then
        echo "ERROR: using update_permission"
        echo "USAGE: update_permission <permission-file> <response-header-file> <response-message-file>"
        exit

    fi


    if [ -z "$2" ]
    then
        echo "ERROR: using update_permission"
        echo "USAGE: update_permission <permission-file> <response-header-file> <response-message-file>"
        exit
    fi

    if [ -z "$3" ]
    then
        echo "ERROR: using update_permission"
        echo "USAGE: update_permission <permission-file> <response-header-file> <response-message-file>"
        exit
    fi
 
    PERMISSION_FILE="$1"
    RESPONSE_HEADER="$2"
    RESPONSE_MSG="$3"
    SERVER=`cat $HPC_DM_TEST/utils/server`
    curl -H "Content-Type: application/json" -d @$PERMISSION_FILE -X POST ${SERVER}/hpc-server/acl  --config $HPC_DM_TEST/utils/config  -H "Accept: application/json" -D $RESPONSE_HEADER -o $RESPONSE_MSG -s 2> curl-status 
    #echo "curl -H \"Content-Type: application/json\" -d @$PERMISSION_FILE -X POST ${SERVER}/hpc-server/acl  --config $HPC_DM_TEST/utils/config  -H \"Accept: application/json\" -D $RESPONSE_HEADER -o $RESPONSE_MSG -s 2> curl-status "
    check_connection $RESPONSE_HEADER
}


#Check the correct behavior
function check_correct_behavior {

    #Verify the collection registration went through
    verify_registration  collection-registration-response-header.tmp
    
    #Update the input template with the new collection and user values  
    COLLECTION_PATH=$(cat registered-project-path.tmp)
    NEW_USER_ID=$(cat new-user-id.tmp)
    UPDATED_PATH=$(cat input.json | sed "s#dxcollectionpath#$COLLECTION_PATH#")
    UPDATED_USER=$(echo "$UPDATED_PATH" | sed "s#dxnewuserid#$NEW_USER_ID#")
    echo "$UPDATED_USER" > input.json.tmp
    
    #Submit the request to change permission
    RESPONSE_HEADER=permission-response-header.tmp
    RESPONSE_MSG=permission-response-message.json.tmp 
    update_permission "input.json.tmp" "$RESPONSE_HEADER" "$RESPONSE_MSG"
    
    HTTP_CODE=`get_http_code $RESPONSE_HEADER`
    echo $HTTP_CODE
   
    check_message "$RESPONSE_MSG" 
}


#Function to check if the message contains a true result or a false result
#Input: message-file
function check_message {

    if [ -z "$1" ]
    then
        echo "ERROR: using check_message "
        echo "Usage: check_message <message-file>"
        exit
    fi 

    MESSAGE_FILE="$1"
    MESSAGE=$(cat "$MESSAGE_FILE")
    if [[ ! "$MESSAGE" == *true*  ]]
    then
        echo "false" 1>&2
    else
        echo "true"
    fi

}

#Register a project
function register_permission_collection {
     
 
    #PERMISSION_UTILS=$HPC_DM_TEST/test-permission/utils/
    #Register the collection
    USERID=`get_username $HPC_DM_TEST/utils/config`
    PROJECT_PATH="/FNL_SF_Archive/${USERID}/dice-unit-test/project-permission"
    echo "$PROJECT_PATH" > registered-project-path.tmp

    register_collection_from_template  "$PROJECT_PATH"
    #curl_register $PERMISSION_UTILS/register-project.json "$PROJECT_PATH" collection
}

#Register a new project and a user
function register_new_project_and_user {

    PERMISSION_UTILS=$HPC_DM_TEST/test-permission/utils/
    
    #Register the collection      
    register_permission_collection
   
    #Register a user
    register_user_from_template
}
