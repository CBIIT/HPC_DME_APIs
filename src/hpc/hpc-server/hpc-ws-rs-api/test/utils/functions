#!/usr/bin/env bash
# functions
# @author: George Zaki 
# 
# Copyright Leidos Biomedical Research, Inc
# 
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/HPC/LICENSE.txt for details.
#
# Common functions used by the unit tests

#Return the HTTP code in the response excluding 100
function get_http_code {
    grep 'HTTP' $1  | grep '[02-9][0-9][0-9]' | sed 's/.*\([0-9][0-9][0-9]\).*/\1/'
}


#If the input is a filename, return the contents of the file, otherwise return the input
function get_file_value {
    INPUT="$1"
    #Check if the input is a file
    if [ -e "$INPUT" ] 
    then
        INPUT=`cat $INPUT`
    fi
    echo "$INPUT"
}


#Return a single value for a given attribute in a json file 
#Inputs: json-file-name(or input string)  attribute-name 
function get_json_value {
    INPUT="$1"
    ATTRIBUTE="$2"
    INPUT=`get_file_value "$INPUT"`
    echo "$INPUT" | grep "$ATTRIBUTE" | sed "s/.*${ATTRIBUTE}\"[ 	]*:[ 	]*\"\([^\"]*\)\".*/\1/"
}


#Return the array value for a given attribute in a json file 
#Inputs: json-file-name(or input string)  attribute-name 
function get_json_array_value {
    INPUT="$1"
    ATTRIBUTE="$2"
    INPUT=`get_file_value "$INPUT"`
    echo "$INPUT" |  grep $ATTRIBUTE | sed "s/.*${ATTRIBUTE}\"[ 	]*:[ 	]*\[\([^]].*\)\].*/\1/"
}
#Checks that the response header file has information.
function check_connection {
RESPONSE_HEADER=$1
CONT=`cat "$RESPONSE_HEADER"`
if [ -z "$CONT" ]
then
    echo "ERROR: THE RESPONSE HEADER FILE $RESPONSE_HEADER IS EMPTY, CHECK CONNECTION" 1>&2
    exit
fi
}


