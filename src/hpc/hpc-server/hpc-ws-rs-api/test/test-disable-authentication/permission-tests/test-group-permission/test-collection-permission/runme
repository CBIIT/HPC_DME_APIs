#!/usr/bin/env bash
# Readme.txt
# @author: George Zaki 
# 
# Copyright Leidos Biomedical Research, Inc
# 
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/HPC/LICENSE.txt for details.
#
# Script to run this test
# Usage: runme [no arguments]

#import common functions
source $HPC_DM_TEST/utils/functions

#Check if the collection and the dataObject registration functions called in makeme were successful.

set -e

USER_ID=dice_user
NEW_GROUP_ID=$(cat new-group-id.tmp)
PROJECT_PATH=$(cat registered-project-path.tmp)

#Add the new-user to the new-group
ACTING_USER=dice_user_sys_admin
add_user_to_group "$NEW_GROUP_ID"  "$USER_ID"
refresh_views

#Try to get the project, should be successful
RESPONSE_HEADER=get-project-response-header.tmp
RESPONSE_MSG=get-project-response-message.json.tmp

ACTING_USER=$USER_ID
get_item collection/$PROJECT_PATH $RESPONSE_HEADER $RESPONSE_MSG $USER_ID 
get_http_code $RESPONSE_HEADER

mv $RESPONSE_HEADER first-$RESPONSE_HEADER
mv $RESPONSE_MSG first-$RESPONSE_MSG 

#Search using metadata
RESPONSE_HEADER=query-response-header.tmp
RESPONSE_MSG=query-response-message.json.tmp
query_by_metadata collection input.json $USER_ID  
ATTRIBUTE="\"name\""
#Check that the collection is  returned 
VALUE="dice-group-permission-project-name"
check_existance "$RESPONSE_MSG" "$ATTRIBUTE" "$VALUE" TRUE



#Remove new-user from new-group.
ACTING_USER=dice_user_sys_admin
remove_user_from_group $NEW_GROUP_ID $USER_ID
refresh_views

#Try to get the project. Should fail
ACTING_USER=$USER_ID
get_item collection/$PROJECT_PATH $RESPONSE_HEADER $RESPONSE_MSG $USER_ID 
get_http_code $RESPONSE_HEADER

#Search using metadata
RESPONSE_HEADER=false-query-response-header.tmp
RESPONSE_MSG=false-query-response-message.json.tmp
query_by_metadata collection input.json $USER_ID  
ATTRIBUTE="\"name\""
#Check that the collection is  returned 
VALUE="dice-group-permission-project-name"
check_non_existance "$RESPONSE_HEADER" "$RESPONSE_MSG" "$ATTRIBUTE" "$VALUE"




