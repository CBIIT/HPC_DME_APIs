#!/usr/bin/env bash
# Readme.txt
# @author: George Zaki 
# 
# Copyright Leidos Biomedical Research, Inc
# 
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/HPC/LICENSE.txt for details.
#
# Script to run this test
# Usage: runme [no arguments]

#import common functions
source $HPC_DM_TEST/utils/functions
source ../../utils/registration-functions

NAME=`date +"%b-%d-%G-%H-%M-%S"`
USERID=`get_username "$HPC_DM_TEST/utils/config"`
COLLECTION_PATH="$(get_basefolder)/test-${NAME}"

#Register the collection 
curl_register input.json  "$COLLECTION_PATH" collection

#Check the returned code is 201
REG_HTTP_CODE=`get_http_code collection-registration-response-header.tmp`
if [ "$REG_HTTP_CODE" != "201" ]  
then
        echo "FAILED TO REGISTER, HTTP_CODE = $REG_HTTP_CODE" 1>&2
        exit
fi

mv collection-registration-response-header.tmp original-registration-header.tmp
echo $REG_HTTP_CODE

RESPONSE_HEADER=response-header
RESPONSE_MSG=response-message.json

#Get the registered collection by path
get_item "/collection/${COLLECTION_PATH}" "$RESPONSE_HEADER" "$RESPONSE_MSG"

GET_HTTP_CODE=`get_http_code $RESPONSE_HEADER`
if [ "$GET_HTTP_CODE" != "200" ]  
then
        echo "FAILED TO GET, HTTP_CODE = $GET_HTTP_CODE" 1>&2
        exit
fi

ATTRIBUTE="\"uuid\""
check_attribute "$RESPONSE_MSG" "$ATTRIBUTE"


ATTRIBUTE="\"registered_by_name\""
check_attribute "$RESPONSE_MSG" "$ATTRIBUTE"

ATTRIBUTE="\"registered_by_doc\""
check_attribute "$RESPONSE_MSG" "$ATTRIBUTE"

