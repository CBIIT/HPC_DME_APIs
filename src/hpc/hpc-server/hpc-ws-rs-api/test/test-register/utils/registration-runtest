#!/usr/bin/env bash
# Readme.txt
# @author: George Zaki 
# 
# Copyright Leidos Biomedical Research, Inc
# 
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/HPC/LICENSE.txt for details.
#
# Script to run this test
# Usage: runme [no arguments]
#import common functions


#Run common script
../../../utils/runtest

ERROR_TYPE=$1
DESTINATION_PATH=$2

source ../../../utils/functions
source ../../utils/registration-functions


POLICIES_FILE=policies.json

if ! [ -f $POLICIES_FILE ] 
then
    echo "ERROR: LOCAL POLICIES FILE DOES NOT EXIST. RUN MAKEME FIRST"
    exit
fi


RESPONSE_HEADER=response-header
RESPONSE_MSG=response-message.json


SERVER=`cat ../../../utils/server`

#DESTINATION="tempZone/home/rods/eran-test-folder-a/folder-b"

VALID_INPUT=`validate_collection $POLICIES_FILE  input.json`
#echo "$VALID_INPUT"

if [  "$VALID_INPUT" !=  "PASS" -a "$VALID_INPUT" != "FAIL" ] 
then
    echo "Validation returned: $VALID_INPUT"
    exit
fi

#Clean previous curl results
../../../utils/cleantest

# add -D <filename> to dump the header
echo "curl -H \"Content-Type: application/json\" -d @input.json -X PUT ${SERVER}/hpc-server/dataObject/${DESTINATION_PATH}  --config ../../../utils/config  -H \"Accept: application/json\" -D $RESPONSE_HEADER -o $RESPONSE_MSG -s 2> curl-status"
curl -H "Content-Type: application/json" -d @input.json -X PUT ${SERVER}/hpc-server/dataObject/${DESTINATION_PATH}  --config ../../../utils/config  -H "Accept: application/json" -D $RESPONSE_HEADER -o $RESPONSE_MSG -s 2> curl-status 

check_connection $RESPONSE_HEADER

RETURN_CODE=`get_http_code $RESPONSE_HEADER`

#If the input is valide, 201 should be returned
if [ "$VALID_INPUT" == "PASS" ]
then 
    if [ "$RETURN_CODE" != "201" ] 
    then
        echo "Valid input returned code: $RETURN_CODE"
    fi
fi


#If the input is not valide, 400 should be returned
if [ "$VALID_INPUT" == "FAIL" ] 
then
    if [ "$RETURN_CODE" != "400" ]
    then
        echo "Invalid input returned code: $RETURN_CODE"
    fi
    RETURNED_ERROR_TYPE=`get_json_value $RESPONSE_MSG errorType`
    if [ "$RETURNED_ERROR_TYPE" != "$ERROR_TYPE" ]
    then
        echo "Invalid error type. Expected: $ERROR_TYPE, received: $RETURNED_ERROR_TYPE"
    fi
    #ERROR_REASON=`get_json_value $RESPONSE_MSG requestRejectReason`
fi
