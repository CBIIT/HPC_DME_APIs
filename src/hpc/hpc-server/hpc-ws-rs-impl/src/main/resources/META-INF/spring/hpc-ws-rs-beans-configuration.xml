<?xml version="1.0" encoding="UTF-8"?>
<!--  
 * hpc-ws-rs-beans-configuration.xml
 *
 * Copyright SVG,  Inc.
 * Copyright Leidos Biomedical Research, Inc
 * 
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/HPC/LICENSE.txt for details.
 *
 * @author <a href="mailto:eran.rosenberg@nih.gov">Eran Rosenberg</a>
 * @version $Id$
 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:util="http://www.springframework.org/schema/util" 
	   xmlns:cxf="http://cxf.apache.org/core"
	   xmlns:wsa="http://cxf.apache.org/ws/addressing" 
	   xmlns:jaxws="http://cxf.apache.org/jaxws"
	   xmlns:jaxrs="http://cxf.apache.org/jaxrs" 
	   xmlns:sec="http://cxf.apache.org/configuration/security"
	   xmlns:http="http://cxf.apache.org/transports/http/configuration"
	   xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                           http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
	                       http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd
	                       http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
	                       http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd
                           http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
                           http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<context:annotation-config />
	<import resource="classpath:META-INF/cxf/cxf.xml" />

	<!-- JAXB Provider -->
	<bean id="jaxbProvider" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider">
		<property name="marshallerProperties" ref="jaxbProviderMarshallerProperties" />
	</bean>
	<util:map id="jaxbProviderMarshallerProperties">
		<entry key="jaxb.formatted.output">
			<value type="java.lang.Boolean">true</value>
		</entry>
	</util:map>

	<!-- JSON Provider -->
	<bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
		<property name="namespaceMap" ref="jsonProviderNamespaceMap" />
	</bean>
	<util:map id="jsonProviderNamespaceMap" map-class="java.util.Hashtable">
		<entry key="http://hpc.nci.nih.gov/dto/error" value="gov.nih.nci.hpc.dto.error" />
		<entry key="http://hpc.nci.nih.gov/dto/dataset" value="gov.nih.nci.hpc.dto.dataset" />
		<entry key="http://hpc.nci.nih.gov/dto/user" value="gov.nih.nci.hpc.dto.user" />
		<entry key="http://hpc.nci.nih.gov/domain/dataset" value="gov.nih.nci.hpc.domain.dataset" />
		<entry key="http://hpc.nci.nih.gov/domain/metadata" value="gov.nih.nci.hpc.domain.metadata" />
		<entry key="http://hpc.nci.nih.gov/domain/user" value="gov.nih.nci.hpc.domain.user" />
		<entry key="http://hpc.nci.nih.gov/domain/project" value="gov.nih.nci.hpc.domain.project" />
	</util:map>

	<!-- JAX-RS Service Beans -->
	<bean id="hpcUserRestService" class="gov.nih.nci.hpc.ws.rs.impl.HpcUserRestServiceImpl">
		<constructor-arg ref="hpcUserBusService" />
		<constructor-arg value="${hpc.ws.rs.stackTraceEnabled}" />
	</bean>
	<bean id="hpcDatasetRestService" class="gov.nih.nci.hpc.ws.rs.impl.HpcDatasetRestServiceImpl">
		<constructor-arg ref="hpcDatasetBusService" />
		<constructor-arg value="${hpc.ws.rs.stackTraceEnabled}" />
		<constructor-arg value="${dynamicfields}" />
	</bean>
	<bean id="hpcProjectRestService" class="gov.nih.nci.hpc.ws.rs.impl.HpcProjectRestServiceImpl">
		<constructor-arg ref="hpcProjectBusService" />
		<constructor-arg value="${hpc.ws.rs.stackTraceEnabled}" />
		<constructor-arg value="${dynamicfields}" />
	</bean>

	<!-- CXF JAX-RS Server Config -->
	<jaxrs:server id="hpc-server" address="${hpc.ws.rs.url}"
		bus="cxf">
		<jaxrs:serviceBeans>
			<ref bean="hpcUserRestService" />
			<ref bean="hpcDatasetRestService" />
			<ref bean="hpcProjectRestService" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<ref bean="jaxbProvider" />
			<ref bean="jsonProvider" />
			<bean class="gov.nih.nci.hpc.ws.rs.provider.HpcAuthenticationExceptionMapper"/>
		</jaxrs:providers>
		<jaxrs:inInterceptors>
        	<bean class="gov.nih.nci.hpc.ws.rs.interceptor.HpcAuthenticationInterceptor"/>
      </jaxrs:inInterceptors>
	</jaxrs:server>
</beans>

