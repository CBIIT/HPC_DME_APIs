<?xml version="1.0" encoding="UTF-8"?>
<!--  
 * hpc-integration-beans-configuration.xml
 *
 * Copyright SVG,  Inc.
 * Copyright Leidos Biomedical Research, Inc
 * 
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/HPC/LICENSE.txt for details.
 *
 * @author <a href="mailto:eran.rosenberg@nih.gov">Eran Rosenberg</a>
 * @version $Id$
 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util" 
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<context:annotation-config />
	
	<!--  Globus Archive Destination. -->	
	<bean id="hpcGlobusArchiveDestinationLocation" class="gov.nih.nci.hpc.domain.datatransfer.HpcFileLocation" >
		<property name="fileContainerId" value="${hpc.integration.globus.archive.endpoint}" />
		<property name="fileId" value="${hpc.integration.globus.archive.path}" />
	</bean>
	<bean id="hpcGlobusArchiveDestination" class="gov.nih.nci.hpc.domain.datatransfer.HpcArchiveDestination" >
		<property name="destinationLocation" ref="hpcGlobusArchiveDestinationLocation" />
		<property name="destinationType" value="${hpc.integration.globus.archive.type}" />
	</bean>
	
	<!--  Globus Connection  -->
	<bean id="hpcGlobusConnection" class="gov.nih.nci.hpc.integration.globus.impl.HpcGlobusConnection">
		<constructor-arg value="${hpc.integration.globus.nexusAPIURL}" index="0" />
		<constructor-arg value="${hpc.integration.globus.globusURL}" index="1" />
	</bean>
	
	<!-- Globus Data Transfer Proxy -->
	<bean id="hpcGlobusDataTransferProxy" 
	      class="gov.nih.nci.hpc.integration.globus.impl.HpcDataTransferProxyImpl" />
	      
	<!--  S3 Archive Destination. -->	
	<bean id="hpcS3ArchiveDestinationLocation" class="gov.nih.nci.hpc.domain.datatransfer.HpcFileLocation" >
		<property name="fileContainerId" value="${hpc.integration.cleversafe.archive.vault}" />
		<property name="fileId" value="${hpc.integration.cleversafe.archive.objectId}" />
	</bean>
	<bean id="hpcS3ArchiveDestination" class="gov.nih.nci.hpc.domain.datatransfer.HpcArchiveDestination" >
		<property name="destinationLocation" ref="hpcS3ArchiveDestinationLocation" />
		<property name="destinationType" value="${hpc.integration.cleversafe.archive.type}" />
	</bean>
	
	<!--  S3 Connection  -->
	<bean id="hpcS3Connection" class="gov.nih.nci.hpc.integration.s3.impl.HpcS3Connection">
		<constructor-arg value="${hpc.integration.cleversafe.URL}" index="0" />
	</bean>
	
	<!-- S3 Data Transfer Proxy -->
	<bean id="hpcS3DataTransferProxy" 
	      class="gov.nih.nci.hpc.integration.s3.impl.HpcDataTransferProxyImpl" />
	
	<!-- HPC LDAP Authentication Proxy -->
	<bean id="hpcLdapAuthenticationProxy"
		class="gov.nih.nci.hpc.integration.ldap.authentication.HpcLdapAuthenticationProxyImpl">
		<constructor-arg ref="ldapAuthProvider" />
	</bean>
	
	<bean id="contextSource"
		class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<constructor-arg value="${hpc.integration.ldap.URL}"/>
	</bean>
		
	<bean id="ldapAuthProvider"
	    class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
		<!-- strategy for handling the actual authentication against the LDAP repository -->
    	<constructor-arg ref="authenticator" />
		 <!-- strategy for retrieving a user's set of granted authorities -->
    	<constructor-arg ref="populator" />
	</bean>
	<bean id="authenticator" class="org.springframework.security.ldap.authentication.BindAuthenticator">
		<constructor-arg ref="contextSource" />
		<property name="userSearch">
			<bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
			  <constructor-arg index="0" value="ou=NCI,o=NIH"/>
			  <constructor-arg index="1" value="(uid={0})"/>
			  <constructor-arg index="2" ref="contextSource" />
			</bean>
		</property>
	</bean>
				
	<bean id="populator"
	      class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
	    <constructor-arg ref="contextSource" />
	    <!--  group based DN - we will be searching for groups in "ou=groups,dc=example,dc=com" -->
	    <constructor-arg value="ou=NCI,o=NIH" />
	    
	    <!-- the name of the attribute that will contain role information (which
	         effectively translates to a user's granted authorities. Default is "cn" -->
	    <property name="groupRoleAttribute" value="cn" />
	    
	    <!-- case normalization to upper case. Default is true -->
	    <property name="convertToUpperCase" value="false" />
	    
	    <!-- role prefix to append to the group name. Default is "ROLE_". -->
	    <property name="rolePrefix" value="" />
	</bean>		
	
	<!--  HPC iRODS Connection -->
	<bean id="hpcIRODSConnection" 
	      class="gov.nih.nci.hpc.integration.irods.impl.HpcIRODSConnection" >
	      <constructor-arg value="${hpc.integration.irods.host}" index="0" />
	      <constructor-arg value="${hpc.integration.irods.port}" index="1" />
	      <constructor-arg value="${hpc.integration.irods.zone}" index="2" />
	      <constructor-arg value="${hpc.integration.irods.resource}" index="3" />
	      <constructor-arg value="${hpc.integration.irods.basePath}" index="4" />
	</bean>
	
	<!--  HPC Data Management Proxy -->
	<bean id="hpcDataManagementProxy" 
	      class="gov.nih.nci.hpc.integration.irods.impl.HpcDataManagementProxyImpl" />
	
</beans>