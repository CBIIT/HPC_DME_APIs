#!/usr/bin/env bash
# Readme.txt
# @author: George Zaki 
# 
# Copyright Leidos Biomedical Research, Inc
# 
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/HPC/LICENSE.txt for details.
#
# Script to run this test
# Usage: runme [no arguments]

#import common functions
source $HPC_DM_TEST/utils/functions

../utils/runtest

verify_registration  collection-registration-response-header.tmp
verify_registration  dataObject-registration-response-header.tmp

OBJECT_PATH=$(cat registered-data-object-path.tmp)

#Make sure the dataObject is NOT archived
OBJECT_GET_PATH=dataObject/$OBJECT_PATH
RESPONSE_HEADER=get-item-response-header.tmp 
RESPONSE_MSG=get-item-response-message.json.tmp
get_item "$OBJECT_GET_PATH"  "$RESPONSE_HEADER" "$RESPONSE_MSG"
ARCH_STATUS=$(get_json_attribute_value "$RESPONSE_MSG" "data_transfer_status")

if [ "$ARCH_STATUS" ==  "ARCHIVED" ]
then
    echo "Can not run the test as the object is already ARCHIVED." 1>&2
    echo "data_transfer_status=$ARCH_STATUS" 1>&2
    exit
fi


#Delete the dataobject 

RESPONSE_HEADER="delete-dataObject-response-header.tmp"
RESPONSE_MSG="delete-dataObject-response-message.json.tmp"
delete_dataobject "$OBJECT_PATH" $RESPONSE_HEADER $RESPONSE_MSG

expected_message="Object is not in archived state yet."
get_http_code $RESPONSE_HEADER >&2
get_json_value $RESPONSE_MSG errorType >&2
get_json_value $RESPONSE_MSG requestRejectReason >&2
get_json_value $RESPONSE_MSG message | sed "s/$expected_message.*/$expected_message/" >&2
