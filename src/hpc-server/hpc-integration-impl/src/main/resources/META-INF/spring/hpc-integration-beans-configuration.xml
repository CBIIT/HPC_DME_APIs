<?xml version="1.0" encoding="UTF-8"?>
<!--  
 * hpc-integration-beans-configuration.xml
 *
 * Copyright SVG,  Inc.
 * Copyright Leidos Biomedical Research, Inc
 * 
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/HPC/LICENSE.txt for details.
 *
 * @author <a href="mailto:eran.rosenberg@nih.gov">Eran Rosenberg</a>
 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util" 
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<context:annotation-config />
	
	<bean id="hpcGlobusRetryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="retryPolicy" ref="hpcGlobusRetryPolicy" />
        <property name="backOffPolicy" ref="hpcGlobusBackOffPolicy" />
    </bean>
 
    <bean id="hpcGlobusRetryPolicy" class="org.springframework.retry.policy.SimpleRetryPolicy">
        <constructor-arg index="0" value="${hpc.integration.globus.retry.maxAttempts}" />
        <constructor-arg index="1">
            <map>
                <entry key="java.lang.RuntimeException" value="true" />
                <entry key="java.lang.Exception" value="true" />
            </map>
        </constructor-arg>
    </bean>
 
    <bean id="hpcGlobusBackOffPolicy" class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
        <property name="initialInterval" value="${hpc.integration.globus.retry.initialInterval}" />
        <property name="maxInterval" value="${hpc.integration.globus.retry.maxInterval}" />
        <property name="multiplier" value="${hpc.integration.globus.retry.intervalMultiplier}" />
    </bean>
    
	<!--  Globus Archive Destination. -->	
	<bean id="hpcGlobusArchiveDestinationLocation" class="gov.nih.nci.hpc.domain.datatransfer.HpcFileLocation" >
		<property name="fileContainerId" value="${hpc.integration.globus.archive.endpoint}" />
		<property name="fileId" value="${hpc.integration.globus.archive.path}" />
	</bean>
	<bean id="hpcGlobusArchiveDestination" class="gov.nih.nci.hpc.domain.datatransfer.HpcArchive" >
		<property name="fileLocation" ref="hpcGlobusArchiveDestinationLocation" />
		<property name="type" value="${hpc.integration.globus.archive.type}" />
		<property name="directory" value="${hpc.integration.globus.archive.directory}" />
	</bean>
	
	<!--  Globus Download Source. -->	
	<bean id="hpcGlobusDownloadSourceLocation" class="gov.nih.nci.hpc.domain.datatransfer.HpcFileLocation" >
		<property name="fileContainerId" value="${hpc.integration.globus.download.endpoint}" />
		<property name="fileId" value="${hpc.integration.globus.download.path}" />
	</bean>
	<bean id="hpcGlobusDownloadSource" class="gov.nih.nci.hpc.domain.datatransfer.HpcArchive" >
		<property name="fileLocation" ref="hpcGlobusDownloadSourceLocation" />
		<property name="directory" value="${hpc.integration.globus.download.directory}" />
	</bean>
	
	<!--  Globus Connection  -->
	<bean id="hpcGlobusConnection" class="gov.nih.nci.hpc.integration.globus.impl.HpcGlobusConnection">
		<constructor-arg value="${hpc.integration.globus.globusAuthUrl}" index="0" />
		<constructor-arg value="${hpc.integration.globus.globusAuthScope}" index="1" />
	</bean>
	
	<!--  Globus Directory Browser  -->
	<bean id="hpcGlobusDirectoryBrowser" class="gov.nih.nci.hpc.integration.globus.impl.HpcGlobusDirectoryBrowser" />
	
	<!-- Globus Data Transfer Proxy -->
	<bean id="hpcGlobusDataTransferProxy" 
	      class="gov.nih.nci.hpc.integration.globus.impl.HpcDataTransferProxyImpl" >
	      <constructor-arg value="${hpc.integration.globus.queueSize}" index="0" />
	</bean>
	
	<!--  S3 Connection  -->
	<bean id="hpcS3Connection" class="gov.nih.nci.hpc.integration.s3.impl.HpcS3Connection" />
	
	<!-- S3 Data Transfer Proxy -->
	<bean id="hpcS3DataTransferProxy" 
	      class="gov.nih.nci.hpc.integration.s3.impl.HpcDataTransferProxyImpl" />
	
	<!-- HPC LDAP Authentication Proxy -->
	<bean id="hpcLdapAuthenticationProxy"
		  class="gov.nih.nci.hpc.integration.ldap.impl.HpcLdapAuthenticationProxyImpl" >
		  <constructor-arg value="${hpc.integration.ldap.URL}" index="0" />
		  <constructor-arg value="${hpc.integration.ldap.username}" index="1" />
		  <constructor-arg value="${hpc.integration.ldap.password}" index="2" />
		  <constructor-arg value="${hpc.integration.ldap.base}" index="3" />
		  <constructor-arg value="${hpc.integration.ldap.userIdFilter}" index="4" />
		  <constructor-arg value="${hpc.integration.ldap.userIdDomainName}" index="5" />
	</bean>
		
	<!--  HPC iRODS Connection -->
	<bean id="hpcIRODSConnection" 
	      class="gov.nih.nci.hpc.integration.irods.impl.HpcIRODSConnection" >
	      <constructor-arg value="${hpc.integration.irods.host}" index="0" />
	      <constructor-arg value="${hpc.integration.irods.port}" index="1" />
	      <constructor-arg value="${hpc.integration.irods.zone}" index="2" />
	      <constructor-arg value="${hpc.integration.irods.resource}" index="3" />
	      <constructor-arg value="${hpc.integration.irods.basePath}" index="4" />
	</bean>
	
	<!--  HPC Data Management Proxy -->
	<bean id="hpcDataManagementProxy" 
	      class="gov.nih.nci.hpc.integration.irods.impl.HpcDataManagementProxyImpl" />
	
</beans>