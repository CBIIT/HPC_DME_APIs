#!/usr/bin/env bash
# Readme.txt
# @author: George Zaki 
# 
# Copyright Leidos Biomedical Research, Inc
# 
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/HPC/LICENSE.txt for details.
#
# Script to run this test
# Usage: runme [no arguments]

#import common functions
source $HPC_DM_TEST/utils/functions

#Check if the collection and the dataObject registration functions called in makeme were successful.

RESPONSE_HEADER=project-response-header.tmp
verify_registration  $RESPONSE_HEADER

RESPONSE_HEADER=folder-response-header.tmp
verify_registration  $RESPONSE_HEADER

PROJECT_PATH=$(cat registered-project-path.tmp)
FOLDER_PATH=$(cat registered-folder-path.tmp)

#Switch to dice_use 
ACTING_USER=dice_user

#Try to get the project, should be unsuccessful
RESPONSE_HEADER=get-project-response-header.tmp
RESPONSE_MSG=get-project-response-message.json.tmp
get_item collection/$PROJECT_PATH $RESPONSE_HEADER $RESPONSE_MSG  dice_user
get_http_code $RESPONSE_HEADER


#Try to get the folder, should be successful
RESPONSE_HEADER=get-folder-response-header.tmp
RESPONSE_MSG=get-folder-response-message.json.tmp
get_item collection/$FOLDER_PATH $RESPONSE_HEADER $RESPONSE_MSG  dice_user
get_http_code $RESPONSE_HEADER

#Search for the folder using a project attribute, should be successful (as request by the users) 

RESPONSE_HEADER=search-response-header.tmp
RESPONSE_MSG=search-response-message.json.tmp

query_by_metadata collection updated-search-input.json.tmp dice_user

#Make sure the folder is returned
code=$(get_http_code $RESPONSE_HEADER)
echo $code
if [ "$code" -eq 200 ]
then
    folder_name=$(basename $FOLDER_PATH)
    project_name=$(basename "$PROJECT_PATH")
    grep -q "$project_name..$folder_name" "$RESPONSE_MSG"  || echo "$folder_name is not part of the results" >&2
fi
