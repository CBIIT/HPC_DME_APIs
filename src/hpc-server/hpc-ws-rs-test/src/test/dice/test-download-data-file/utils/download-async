#!/usr/bin/env bash
# download-async 
# @author: George Zaki 
# 
# Copyright Leidos Biomedical Research, Inc
# 
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/HPC/LICENSE.txt for details.
#
# Script to run the asynchronous download 
# Usage: download-async [no arguments]

#import common functions
source $HPC_DM_TEST/utils/functions
../utils/runtest


verify_registration  collection-registration-response-header.tmp
verify_registration  dataObject-registration-response-header.tmp


OBJECT_PATH=`cat registered-dataobject-path.tmp`

RESPONSE_HEADER=download-response-header.tmp 
RESPONSE_MSG=download-response-message.json.tmp
download_async "dataObject/$OBJECT_PATH"

HTTP_CODE=`get_http_code $RESPONSE_HEADER`
echo "download_async_code $HTTP_CODE"

#Do not check the file is the code is not 200
if [ $HTTP_CODE != 200 ] 
then
    echo "Unable to submit download request" >&2
    exit 1
fi

#Make sure a task ID is returned
taskId=$(get_json_value $RESPONSE_MSG taskId)
if [[ -z "$taskId" ]] 
then
  echo "Can not find taskId in $RESPONSE_MSG" >&2;
  exit 1
fi

#Get the status of the download request and verify it is true

GLOBUS_PATH=$(get_json_value input.json.tmp fileId)
verify_globus_download $taskId $GLOBUS_PATH dataObject
