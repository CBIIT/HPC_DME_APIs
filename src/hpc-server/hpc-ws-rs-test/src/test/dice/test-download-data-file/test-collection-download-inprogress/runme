#!/usr/bin/env bash
# Readme.txt
# @author: George Zaki 
# 
# Copyright Leidos Biomedical Research, Inc
# 
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/HPC/LICENSE.txt for details.
#
# Script to run this test
# Usage: runme [no arguments]

#import common functions
source $HPC_DM_TEST/utils/functions
../utils/runtest


verify_registration  collection-registration-response-header.tmp
verify_registration  dataObject-registration-response-header.tmp


FOLDER_PATH=collection/$(cat registered-folder-path.tmp)
OBJECT_GET_PATH=dataObject/$(cat registered-dataobject-path.tmp)


RESPONSE_HEADER=get-item-response-header.tmp 
RESPONSE_MSG=get-item-response-message.json.tmp
get_item "$OBJECT_GET_PATH"  "$RESPONSE_HEADER" "$RESPONSE_MSG"

RESPONSE_HEADER=download-response-header.tmp 
RESPONSE_MSG=download-response-message.json.tmp
download_async "$FOLDER_PATH"

HTTP_CODE=`get_http_code $RESPONSE_HEADER`
echo $HTTP_CODE

taskId=$(get_json_unquotted_value $RESPONSE_MSG taskId)

sleep 60
get_download_status "$taskId" collection
RESPONSE_HEADER=get-download-status-response-header.tmp
RESPONSE_MSG=get-download-status-response-message.json.tmp
status=$(get_json_unquotted_value $RESPONSE_MSG inProgress)
echo "inProgress:$status"

if [ "$status" != "false" ]
then
  echo "Status is still false, can not verify returned message "
fi
#Make sure the appropriate message is included
MSG_EXIST=$(grep "Object is not in archived state yet" $RESPONSE_MSG)
if [ -z "$MSG_EXIST" ]
then
    echo "ERROR: an unarchived object $FILE_ID is downloaded " >&2
fi
