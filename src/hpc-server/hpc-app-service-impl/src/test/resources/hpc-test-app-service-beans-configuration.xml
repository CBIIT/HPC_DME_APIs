<?xml version="1.0" encoding="UTF-8"?>
<!--  
 * hpc-app-service-beans-configuration.xml
 *
 * Copyright SVG,  Inc.
 * Copyright Leidos Biomedical Research, Inc
 * 
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/HPC/LICENSE.txt for details.
 *
 * @author <a href="mailto:eran.rosenberg@nih.gov">Eran Rosenberg</a>
 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util" 
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<context:annotation-config />
	
	
	<!--  Setup data for test instances -->
	
	<bean id="hpcKeyGenerator" class="gov.nih.nci.hpc.service.impl.HpcUUIDKeyGeneratorImpl" />

	<bean id="hpcGlobusDataTransferProxy" class="org.mockito.Mockito" factory-method="mock">
    	<constructor-arg value="gov.nih.nci.hpc.integration.HpcDataTransferProxy" />
	</bean>
	
	<bean id="hpcS3DataTransferProxy" class="org.mockito.Mockito" factory-method="mock">
    	<constructor-arg value="gov.nih.nci.hpc.integration.HpcDataTransferProxy" />
	</bean>

	<!--  Map of HPC Data Transfer Proxies -->
 	<util:map id="hpcDataTransferProxies" 
	          key-type="gov.nih.nci.hpc.domain.datatransfer.HpcDataTransferType"
	          value-type="gov.nih.nci.hpc.integration.HpcDataTransferProxy">
  		<entry key="GLOBUS" value-ref="hpcGlobusDataTransferProxy" />
  		<entry key="S_3" value-ref="hpcS3DataTransferProxy" /> 
	</util:map> 
	
	
	<!-- Test instances of HPC Application Services Beans -->
	
   	<bean id="hpcTestDataTransferService"  class="gov.nih.nci.hpc.service.impl.HpcDataTransferServiceImpl">
		<constructor-arg ref="hpcDataTransferProxies" index="0" />
		<qualifier value="test"></qualifier>
		<constructor-arg value="${hpc.service.dataTransfer.downloadDirectory}" index="1" />
	</bean> 
	
	<!--  <bean id="hpcDownloadResultsPagination" class="gov.nih.nci.hpc.service.impl.HpcPagination">
		<constructor-arg value="1" />
	</bean>
	
	<bean id="hpcSystemAccountLocator" class="gov.nih.nci.hpc.service.impl.HpcSystemAccountLocator"
	      init-method="reload" />
	
	
    <bean id="hpcTestDataManagementConfigurationLocator"
	      class="gov.nih.nci.hpc.service.impl.HpcDataManagementConfigurationLocator"
	      init-method="reload"> 
	      <qualifier value="test"></qualifier>
	</bean> 
	           
	<bean id="hpcDataManagementService" class="gov.nih.nci.hpc.service.impl.HpcDataManagementServiceImpl" >
		<constructor-arg value="${hpc.service.dataManagement.systemAdminSubjects}" />
		<qualifier value="test">
	</bean> -->
	
	
	<!--  Mocks used by test instances. These get injected into the autowired declarations
	of objects in the test instances whose type match the constructor-arg value. The below
	declaration for a SystemAccountLocator mock is equivalent to 
		@Bean
		public HpcSystemAccountLocator hpcSystemAccountLocator() throws HpcException {
			return Mockito.mock(HpcSystemAccountLocator.class);
		} 
		
		declared in a static @Configuration inner or matching profile class
		for a test class that uses AnnotationConfigContextLoader i.e.
		@ContextConfiguration(loader=AnnotationConfigContextLoader.class)
	-->
	
	<bean id="systemAccountLocator" class="org.mockito.Mockito" factory-method="mock">
 	 <constructor-arg value="gov.nih.nci.hpc.service.impl.HpcSystemAccountLocator" />
	</bean>
	
	<bean id="hpcDownloadResultsPagination" class="org.mockito.Mockito" factory-method="mock">
 	 <constructor-arg value="gov.nih.nci.hpc.service.impl.HpcPagination" />
	</bean>
	
 	<bean id="hpcDataManagementService" class="org.mockito.Mockito" factory-method="mock">
 	 <constructor-arg value="gov.nih.nci.hpc.service.impl.HpcDataManagementServiceImpl" />
	</bean>
	
	<bean id="hpcDataTransferService" class="org.mockito.Mockito" factory-method="mock">
	     <constructor-arg value="gov.nih.nci.hpc.service.impl.HpcDataTransferServiceImpl" />
	</bean>
	
	<bean id="dataManagementConfigurationLocator" class="org.mockito.Mockito" factory-method="mock">
	     <constructor-arg value="gov.nih.nci.hpc.service.impl.HpcDataManagementConfigurationLocator" />
	</bean>  
	
	<bean id="dataManagementConfiguration" class="org.mockito.Mockito" factory-method="mock">
	     <constructor-arg value="gov.nih.nci.hpc.domain.model.HpcDataManagementConfiguration" />
	</bean>
	   
	<bean id="bulkDataObjectRegistrationItem" class="org.mockito.Mockito" factory-method="mock">
	     <constructor-arg value="gov.nih.nci.hpc.domain.model.HpcBulkDataObjectRegistrationItem" />
	</bean> 
	
	<bean id="dataHierarchyValidator" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.service.impl.HpcDataHierarchyValidator" />
	</bean>
	
	<bean id="dataManagementAuthenticator" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.service.impl.HpcDataManagementAuthenticator" />
	</bean>
	
	<bean id="hpcRegistrationResultsPagination" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.service.impl.HpcPagination" />
	</bean>
	
	<bean id="eventService" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.service.HpcEventService" />
	</bean>
	
	<bean id="dataManagementProxy" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.integration.HpcDataManagementProxy" />
	</bean>
	
	<bean id="dataManagementConfigurationDAO" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.dao.HpcDataManagementConfigurationDAO" />
	</bean>
	
	<bean id="dataDownloadDAO" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.dao.HpcDataDownloadDAO" />
	</bean>
	
	<bean id="dataManagementAuditDAO" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.dao.HpcDataManagementAuditDAO" />
	</bean>
	
	<bean id="dataRegistrationDAO" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.dao.HpcDataRegistrationDAO" />
	</bean>
	
	<bean id="systemAccountDAO" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.dao.HpcSystemAccountDAO" />
	</bean>
	
	<bean id="hpcEventDAO" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.dao.HpcEventDAO" />
	</bean>
	
	<bean id="hpcReportsDAO" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.dao.HpcReportsDAO" />
	</bean>
	
	<bean id="notificationDAO" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="gov.nih.nci.hpc.dao.HpcNotificationDAO" />
	</bean>
</beans>