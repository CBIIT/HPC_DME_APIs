name: Deploy  Dev API war file
permissions:
  contents: write
  id-token: write
on:
  workflow_dispatch:
    inputs:
      environment:
        description: env to deploy war file
        type: choice
        default: dev
        options:
          - dev
          - prod
      code_branch:
        description: branch to build
        required: true
        default: main
run-name: "Deploy WARs for ${{ github.event.inputs.environment }} (branch: ${{ github.event.inputs.code_branch }})"
jobs:
  deploy:
    name: Deploy war file
    runs-on: cbiit-global-runners
    environment: ${{ inputs.environment }}
    env:
      CODE_BRANCH: "${{ github.event.inputs.code_branch }}"
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          workflow: build-dev-api.yml
          name: hpc-api-artifacts
          path: ./artifacts

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.TOMCAT_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.TOMCAT_HOST }} >> ~/.ssh/known_hosts
      - name: deploy tomcat
        env:
          remote_user: ${{ secrets.REMOTE_USER }}
          remote: ${{ secrets.TOMCAT_HOST }}
          tomcat_home: /local/content/tomcat/ncifhpcdmsvcp
          dist: /local/content/tomcat/ncifhpcdmsvcp/webapps
          remote_tomcat: tomcat-ncifhpcdmsvcp
          app: hpc-server
          app1: hpc-scheduler
          app2: hpc-scheduler-migration
          unit: hpc-server.war
          unit1: hpc-scheduler.war
          unit2: hpc-scheduler-migration.war
        run: |
          set -xe
          echo "Stopping tomcat"
          ssh -qt $remote_user@$remote "sudo /sbin/service $remote_tomcat stop"
          echo "Cleaning old backups and symlinks..."
          ssh -qt ${remote_user}@${remote} " umask 022; cd ${dist} && if [ -d ${app} ]; then rm -rf ${app}; fi ;  "
          ssh -qt ${remote_user}@${remote} " umask 022; cd ${dist} && if [ -d ${app1} ]; then rm -rf ${app1}; fi ;  "
          ssh -qt ${remote_user}@${remote} " umask 022; cd ${dist} && if [ -d ${app2} ]; then rm -rf ${app2}; fi ;  "
          ssh -qt ${remote_user}@${remote} " cd ${dist}; rm -f hpc-server-[0-9]*.war_backup* hpc-server-[0-9]*.war.backup*; rm -f hpc-scheduler-[0-9]*.war_backup* hpc-scheduler-[0-9]*.war.backup*; rm -f hpc-scheduler-migration-[0-9]*.war_backup* hpc-scheduler-migration-[0-9]*.war.backup* "
          ssh -qt ${remote_user}@${remote} " cd ${dist} && if [ -L ${unit} ]; then rm -f ${unit}; else echo "No symlink found"; fi ; "
          ssh -qt ${remote_user}@${remote} " cd ${dist} && if [ -L ${unit1} ]; then rm -f ${unit1}; else echo "No symlink found"; fi ;  "          ssh -qt ${remote_user}@${remote} " cd ${dist} && if [ -L ${unit2} ]; then rm -f ${unit2}; else echo "No symlink found"; fi ; ls -la ; "
          ssh -qt ${remote_user}@${remote} " cd ${dist}; find -type f -name ${app}-*.war -exec mv {} {}_backup_$(date +%Y%m%d.%H%M) \; && find -type f -name ${app1}-[0-9]*.war -exec mv {} {}_backup_$(date +%Y%m%d.%H%M) \; && find -type f -name ${app2}-*.war -exec mv {} {}_backup_$(date +%Y%m%d.%H%M) \;" || exit $?
          echo "upoading wars to remote server"
          scp -pq artifacts/${app}-*.war ${remote_user}@${remote}:${dist}
          scp -pq artifacts/${app1}-*.war ${remote_user}@${remote}:${dist}
          scp -pq artifacts/${app2}-*.war ${remote_user}@${remote}:${dist}
          echo "creating symlink"
          ssh -qt ${remote_user}@${remote} " cd ${dist} && ln -s $app-*.war ${unit};  cd ${dist} && ln -s $app1-[0-9]*.war ${unit1}; cd ${dist} && ln -s $app2-*.war ${unit2}"
          echo "restart tomcat"
          ssh -qt ${remote_user}@${remote} " sudo /sbin/service $remote_tomcat start"
